find_package( AGGSRC )
if ( AGGSRC_FOUND )
else ( )
    MESSAGE( "AGG Sources not found:  " ${AGG_ROOT})
endif ( )

find_package( EXPAT )
if ( EXPAT_FOUND )
else ( )
    MESSAGE( "EXPAT not found:  " ${EXPAT_ROOT})
endif ( )

find_package( GRAPHVIZSRC )
if ( GRAPHVIZSRC_FOUND )
else ( )
    MESSAGE( "GRAPHVIZ Sources not found:  " ${GRAPHVIZSRC_ROOT})
endif ( )

find_package( Freetype )
if( FREETYPE_FOUND )
else( )
    MESSAGE( "Freetype library was not found" )
endif( )

if(WIN32)
elseif(APPLE)
	find_path(CARBON_INCLUDE_DIR Carbon.h)
    find_library(CARBON_FRAMEWORK Carbon) 
	find_path(QT_INCLUDE_DIR QuickTime.h)
    find_library(COCOA_FRAMEWORK Cocoa)
    find_library(SYSCONFIG_FRAMEWORK SystemConfiguration)
    find_library(FOUNDATION_FRAMEWORK Foundation)
    find_library(APPLICATIONSERVICES_FRAMEWORK ApplicationServices)
    find_library(QUARTZCORE_FRAMEWORK QuartzCore)

    find_library(CORE_SERVICES CoreServices)
    find_library(SYS_CONFIG SystemConfiguration)
    message("Found: ${CORE_SERVICES} ${SYS_CONFIG}")
elseif(UNIX)
    find_package( Threads )
    if( THREADS_FOUND )
    else( )
        MESSAGE( "Threads library was not found" )
    endif( )

	find_package(PkgConfig)
	# GTK is required for XEmbed to work
	if (NOT GTK_INCLUDE_DIRS)
		pkg_check_modules(GTK REQUIRED gtk+-2.0)
		set (GTK_INCLUDE_DIRS ${GTK_INCLUDE_DIRS} CACHE INTERNAL "GTK include dirs")
		set (GTK_LIBRARIES ${GTK_LIBRARIES} CACHE INTERNAL "GTK include dirs")
		set (GTK_LIBRARY_DIRS ${GTK_LIBRARY_DIRS} CACHE INTERNAL "GTK include dirs")
		set (GTK_LDFLAGS ${GTK_LDFLAGS} CACHE INTERNAL "GTK include dirs")
	endif()
endif()
