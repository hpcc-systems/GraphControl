<!--
    Auto-generated test-site
-->
<html>
<head>
    <title>test page for object fbcontrol</title>
    <style type="text/css">
        #TextXGMML
        {
            width: 100%;
            height: 257px;
        }
        #svg
        {
            width: 100%;
            height: 257px;
        }
        #Select1
        {
            width: 168px;
        }
    </style>
</head>
<script type="text/javascript">
    function pluginLHS() {
        return document.getElementById('pluginLHS');
    }

    function pluginRHS() {
        return document.getElementById('pluginRHS');
    }

    //  Events
    function addEvent(obj, name, func) {
        if (window.addEventListener) {
            obj.addEventListener(name, func, false);
        } else {
            obj.attachEvent("on" + name, func);
        }
    }

    function onLoad() {
        addEvent(pluginLHS(), 'LayoutFinished', layoutFinished);
        addEvent(pluginLHS(), 'Scaled', scaled);
        addEvent(pluginLHS(), 'MouseDoubleClick', mouseDoubleClick);
        addEvent(pluginLHS(), 'SelectionChanged', selectionChanged);
        var version = pluginLHS().version;
		
        addEvent(pluginRHS(), 'LayoutFinished', layoutFinishedRHS);
        addEvent(pluginRHS(), 'SelectionChanged', selectionChangedRHS);
    }

    function layoutFinished() {
        pluginLHS().setMessage('');
        pluginLHS().centerOnItem(0, true);
    }

    function layoutFinishedRHS() {
        pluginRHS().setMessage('');
        pluginRHS().centerOnItem(1, true);
    }

    function scaled(newScale) {
        //document.getElementById('TextScale').value = newScale;
    }

    function mouseDoubleClick(item) {
        pluginLHS().centerOnItem(item, true);
    }

    function centerOn(item) {
        pluginLHS().centerOnItem(item, false);
    }

    function selectionChanged(items) {
        DisplaySelectedProperties(items);
    }

    function selectionChangedRHS(items) {
        var selection = pluginRHS().getSelectionAsGlobalID();
        pluginLHS().setSelectedAsGlobalID(selection);
        DisplaySelectedProperties(pluginLHS().getSelection());
        var selectionLHS = pluginLHS().getSelection();
        if (selectionLHS.length > 0)
            pluginLHS().centerOnItem(selectionLHS[0], true);
    }

    function DisplaySelectedProperties(items) {
        pluginRHS().setMessage("Loading Data...");
        pluginRHS().loadXGMML(pluginLHS().getLocalisedXGMML(items));
        pluginRHS().setMessage("Performing Layout...");
        var selection = pluginLHS().getSelectionAsGlobalID();
        pluginRHS().setSelectedAsGlobalID(selection);
        pluginRHS().startLayout(document.getElementById('SelectLayout').value);
        var propsText = '';
        for (var i = 0; i < items.length; ++i) {
            var props = pluginLHS().getProperties(items[i]);
            propsText += '<table border="1">';
            propsText += '<tr><td colspan="2" align="center">';
            propsText += '<input type="button" onclick="javascript:centerOn(' + items[i] + ')" value="' + props['id'] + '" />'
            propsText += '</td></tr>';
            for (var key in props) {
                propsText += '<tr>';
                propsText += '<td>' + key + '</td><td>' + props[key] + '</td>';
                propsText += '</tr>';
            }
            propsText += '</table>';
        }
        document.getElementById('props').innerHTML = propsText;
    }

    function loadTestData() {
        pluginLHS().setMessage("Loading Data...");
        pluginLHS().loadTestData();
        pluginLHS().setMessage("Performing Layout...");
        pluginLHS().startLayout(document.getElementById('SelectLayout').value);
    }

    function clearXGMML() {
        pluginLHS().setMessage("Clearing Data...");
        pluginLHS().clear();
        pluginLHS().setMessage("Performing Layout...");
        pluginLHS().startLayout(document.getElementById('SelectLayout').value);
    }

    function loadXGMML() {
        pluginLHS().setMessage("Loading Data...");
        pluginLHS().loadXGMML(document.getElementById('TextXGMML').value);
        pluginLHS().setMessage("Performing Layout...");
        pluginLHS().startLayout(document.getElementById('SelectLayout').value);
    }

    function mergeXGMML() {
        pluginLHS().setMessage("Merging Data...");
        pluginLHS().mergeXGMML(document.getElementById('TextXGMML').value);
        pluginLHS().setMessage("");
        //pluginLHS().setMessage("Performing Layout...");
        //pluginLHS().startLayout(document.getElementById('SelectLayout').value);
    }

    function setScale() {
        oldScale = pluginLHS().setScale(document.getElementById('TextScale').value);
    }

    function find() {
        var found = pluginLHS().find(document.getElementById('TextFind').value);
        DisplaySelectedProperties(found);
        pluginLHS().setSelected(found);
    }

    function SelectLayout_onclick() {
        pluginLHS().setMessage("Performing Layout...");
        pluginLHS().startLayout(document.getElementById('SelectLayout').value);
    }

</script>
<body onload="onLoad()">
    <table height="80%" width="100%" border="1">
        <tr>
            <td width="80%">
                <object id="pluginLHS" type="application/x-hpccsystemsgraphviewcontrol" standby="Loading HPCC Systems GraphView Control..."
                    width="100%" height="100%">
                </object>
            </td>
            <td valign="top">
                <object id="pluginRHS" type="application/x-hpccsystemsgraphviewcontrol" standby="Loading HPCC Systems  GraphView Control..."
                    width="100%" height="50%">
                </object>
                <p id="props">Props</p>
            </td>
        </tr>
    </table>
    <br />
    <input id="Clear" type="button" value="Clear" onclick="javascript:clearXGMML()" />&nbsp;
    <input id="LoadXGMML" type="button" value="Load XGMML" onclick="javascript:loadXGMML()" />&nbsp;
    <input id="MergeXGMML" type="button" value="Merge XGMML" onclick="javascript:mergeXGMML()" />&nbsp;
    Scale:&nbsp;
    <input id="TextScale" type="text" value="75" />
    <input id="ButtonSetScale" type="button" onclick="javascript:setScale()" value="Set" />
    <select id="SelectLayout" onchange="return SelectLayout_onclick()">
        <option>dot</option>
        <option>neato</option>
        <option>twopi</option>
        <option>fdp</option>
        <option>sfdp</option>
        <option>circo</option>
        <option>patchwork</option>
        <option>osage</option>
        <option>nop</option>
        <option>nop1</option>
        <option>nop2</option>
    </select>&nbsp;
    <input id="TextFind" type="text" value="write" />
    <input id="ButtonFind" type="button" onclick="javascript:find()" value="Find" />
    <br />
    <textarea id="TextXGMML" name="S1">&lt;xgmml&gt; &lt;graph&gt; &lt;node id=&quot;1007&quot;&gt;
    &lt;graph&gt; &lt;node id=&quot;13448&quot;&gt; &lt;graph&gt; &lt;node id=&quot;23448&quot;&gt;
    &lt;att&gt; &lt;graph&gt; &lt;node id=&quot;23449&quot; label=&quot;Workunit Read&quot;&gt;
    &lt;att name=&quot;_kind&quot; value=&quot;54&quot;/&gt; &lt;att name=&quot;ecl&quot;
    value=&quot;DATASET(WORKUNIT(name(&amp;apos;entitydefs&amp;apos;), ), RECORD&amp;#10;
    string class;&amp;#10; string orig;&amp;#10; integer8 docId;&amp;#10; integer8 pos;&amp;#10;
    END);&amp;#10;&quot;/&gt; &lt;att name=&quot;helper&quot; value=&quot;f94D&quot;/&gt;
    &lt;/node&gt; &lt;/graph&gt; &lt;/att&gt; &lt;/node&gt; &lt;/graph&gt; &lt;att&gt;
    &lt;graph&gt; &lt;node id=&quot;13449&quot; label=&quot;Workunit Read&quot;&gt;
    &lt;att name=&quot;_kind&quot; value=&quot;54&quot;/&gt; &lt;att name=&quot;ecl&quot;
    value=&quot;DATASET(WORKUNIT(name(&amp;apos;entitydefs&amp;apos;), ), RECORD&amp;#10;
    string class;&amp;#10; string orig;&amp;#10; integer8 docId;&amp;#10; integer8 pos;&amp;#10;
    END);&amp;#10;&quot;/&gt; &lt;att name=&quot;helper&quot; value=&quot;f94D&quot;/&gt;
    &lt;/node&gt; &lt;/graph&gt; &lt;/att&gt; &lt;/node&gt; &lt;/graph&gt; &lt;node
    id=&quot;13450&quot; label=&quot;Workunit Write&quot;&gt; &lt;att name=&quot;_kind&quot;
    value=&quot;54&quot;/&gt; &lt;att name=&quot;ecl&quot; value=&quot;DATASET(WORKUNIT(name(&amp;apos;entitydefs&amp;apos;),
    ), RECORD&amp;#10; string class;&amp;#10; string orig;&amp;#10; integer8 docId;&amp;#10;
    integer88888 pos;&amp;#10; END);&amp;#10;&quot;/&gt; &lt;att name=&quot;helper&quot;
    value=&quot;f94D&quot;/&gt; &lt;/node&gt; &lt;/node&gt; &lt;edge id=&quot;3&quot;
    source=&quot;23449&quot; target=&quot;13450&quot;/&gt; &lt;/graph&gt; &lt;/xgmml&gt;
</body>
</html>
